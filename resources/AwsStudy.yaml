# AWSテンプレートのバージョン。2022.1時点で唯一のバージョン
AWSTemplateFormatVersion: "2010-09-09"
# テンプレートの説明。実行時に表示されるので記載
Description: AWS-Study(create VPC only)

#プロジェクトごとに変数を定義(参考)
#Parameters:
#    ProjectCode:
#    Type: String
#    Default: itc109
#    Description: Project Code

# リソース定義
Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: aws-study-vpc

  # InternetGateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: aws-study-gw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      #InternetGatewayId: !Ref InternetGateway

  # Subnet
  #oregon-2a
  PublicSubnet-2a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-west-2a
      CidrBlock: 10.1.1.0/24
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: aws-study-pubsubnet-2a
  #oregon-2c
  PublicSubnet-2c:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.2.0/24
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2c
      Tags:
        - Key: Name
          Value: aws-study-pubsubnet-2c

  PrivateSubnet-2c:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.1.3.0/24
      VpcId: !Ref VPC
      AvailabilityZone: us-west-2c
      Tags:
        - Key: Name
          Value: aws-study-prisubnet-2c

  # RouteTable(PublicSubnet-2a)
  # ルートテーブルの作成(VPCを指定)
  RouteTableForPublicSubnet-2a:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RouteTableForPublicSubnet-2a
  # ルートの定義
  RouteForPublicSubnet-2a:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTableForPublicSubnet-2a
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  # ルートテーブルとサブネットの紐付け
  AssocciateRouteTableForPublicSubnet-2a:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForPublicSubnet-2a
      SubnetId: !Ref PublicSubnet-2a

  # RouteTable(PublicSubnet-2c)
  # ルートテーブルの作成(VPCを指定)
  RouteTableForPublicSubnet-2c:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RouteTableForPublicSubnet-2c
  # ルートの定義
  RouteForPublicSubnet-2c:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTableForPublicSubnet-2c
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  # ルートテーブルとサブネットの紐付け
  AssocciateRouteTableForPublicSubnet-2c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForPublicSubnet-2c
      SubnetId: !Ref PublicSubnet-2c

  # EIP for NatGateway
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  # NatGateway
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - NatGatewayEIP
          - AllocationId
      SubnetId: !Ref PublicSubnet-2a
      Tags:
        - Key: Name
          Value: NatGateway
  # RouteTable(PrivateSubnet-2c)
  # ルートテーブルの作成(VPCを指定)
  RouteTableForPrivateSubnet-2c:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: RouteTableForPrivateSubnet-2c
  # ルートの定義（NatGateway）
  RouteForPrivateSubnet-2c:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTableForPrivateSubnet-2c
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NatGateway
  # ルートテーブルとサブネットの紐付け
  AssocciateRouteTableForPrivateSubnet-2c:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTableForPrivateSubnet-2c
      SubnetId: !Ref PrivateSubnet-2c

    # SecurityGroup
  SecurityGroupEC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AWS Study EC2
      VpcId: !Ref VPC
      SecurityGroupIngress:
        # HTTP:apache いらない？？
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        # HTTPS:apache
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        # MYSQL/Aurora：MariaDB
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
        # DND(TCP):Bind  なんで２つ作成
        - IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
        # TCP:Bind　　　なんでipを指定
        - IpProtocol: udp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
        # カスタムTCP:zabbix
        - IpProtocol: tcp
          FromPort: 10050
          ToPort: 10050
          CidrIp: 0.0.0.0/0
        # カスタムTCP:zabbix_agent
        - IpProtocol: tcp
          FromPort: 10051
          ToPort: 10051
          CidrIp: 0.0.0.0/0
        # SMTP:Postfix
        - IpProtocol: smtp
          FromPort: 25
          ToPort: 25
          CidrIp: 0.0.0.0/0
        # カスタムUDP:NTP
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          CidrIp: 0.0.0.0/0
        # NFS:NFS
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: aws-study-securityGroup-ec2

# 今後やること
# インスタンスの作成(鍵を使用しない、使用する)
  # sub2a
  # - web-1
  # - ansible
  # - web-2
  # sub2c
  # - ap
  # - int1
  # - int2
# ELBの作成（HTTPS化）
# Rourte53の設定（ドメイン等）
